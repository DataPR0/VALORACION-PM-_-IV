Ton_Mayo = sum(Reduccion*Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum(Reduccion*Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum(Reduccion*Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum(Reduccion*Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum(Reduccion*Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum(Reduccion*Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum(Reduccion*Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum(Reduccion*Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
Actual <- ACO2 %>% group_by(Mes) %>%
summarise(Ton_Enero = sum(Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum(Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum(Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum(Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum(Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum(Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum(Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum(Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum(Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum(Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum(Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum(Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
Anterior <- ACO2 %>% group_by(Mes) %>%
summarise(Ton_Enero = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
View(Actual)
ACO2 %>% filter(is.na(Categoria)) %>% View
ACO2 <- HHCC %>% filter(is.na(Categoria) | Categoria != 'Libre inversion') %>%
filter(is.na(marca_vehiculo) | marca_vehiculo != 'OTRAS GARANTIAS') %>%
filter(modelo_vehiculo >= 2018) %>%
filter(!Codigo_fasecolda %in% c(88801002,88801003,88801004))#%>%
EV <-ACO2 %>% group_by(Mes) %>%
summarise(Ton_Enero = sum(Reduccion*Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum(Reduccion*Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum(Reduccion*Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum(Reduccion*Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum(Reduccion*Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum(Reduccion*Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum(Reduccion*Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum(Reduccion*Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum(Reduccion*Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum(Reduccion*Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum(Reduccion*Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum(Reduccion*Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
Actual <- ACO2 %>% group_by(Mes) %>%
summarise(Ton_Enero = sum(Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum(Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum(Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum(Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum(Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum(Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum(Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum(Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum(Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum(Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum(Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum(Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
Anterior <- ACO2 %>% group_by(Mes) %>%
summarise(Ton_Enero = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
p_load(tidyverse, magrittr, lubridate, stringi, readxl, openxlsx, odbc, DBI,xlsx)
openxlsx::write.xlsx(Actual, 'EMISIONES CO2 EVITADAS - AGOSTO 24.xlsx', sheetName = 'Actual')
openxlsx::write.xlsx(Anterior, 'EMISIONES CO2 EVITADAS - AGOSTO 24.xlsx', sheetName= 'Anterior', append=T)
openxlsx::write.xlsx(EV, 'EMISIONES CO2 EVITADAS - AGOSTO 24.xlsx',sheetName= 'EV', append=T)
## LISTA DE ARCHIVOS
CO2DB <- list('Emisiones Actuales'= Actual,'Emisiones Anteriores' = Anterior,'Emisiones Evitadas'=EV)
openxlsx::write.xlsx(CO2DB, 'EMISIONES CO2 EVITADAS - AGOSTO 24.xlsx')
month(Sys.Date())
CO2DB %>% lapply(function (x) {x %>% select(1:(month(Sys.Date())-1))})
CO2DB %>% lapply(function (x) {x %>% select(1:(month(Sys.Date())-1)) %>% slice(1:(month(Sys.Date())-1))})
a <- CO2DB %>% lapply(function (x) {x %>% select(1:(month(Sys.Date())-1)) %>% slice(1:(month(Sys.Date())-1))})
View(a)
a <- CO2DB %>% lapply(function (x) {x %>% select(1:(month(Sys.Date()))) %>% slice(1:(month(Sys.Date())))})
View(a)
openxlsx::write.xlsx(CO2DB, 'EMISIONES CO2 EVITADAS - AGOSTO 24.xlsx')
View(a)
a$`Emisiones Actuales`
a <- CO2DB %>% lapply(function (x) {x %>% select(1:(month(Sys.Date()))) %>% slice(1:(month(Sys.Date())-1))})
a$`Emisiones Actuales`
## LISTA DE ARCHIVOS
CO2DB <- list('Emisiones Actuales'= Actual,'Emisiones Anteriores' = Anterior,'Emisiones Evitadas'=EV)
CO2DB <- CO2DB %>% lapply(function (x) {x %>% select(1:(month(Sys.Date()))) %>% slice(1:(month(Sys.Date())-1))})
openxlsx::write.xlsx(CO2DB, 'EMISIONES CO2 EVITADAS - AGOSTO 24.xlsx')
setwd("~/R Scripts and projects/EMISIONES CO2")
require(pacman)
p_load(tidyverse, magrittr, lubridate, stringi, readxl, openxlsx, odbc, DBI,xlsx)
Conexion_Desembolsos <- DBI::dbConnect(odbc::odbc(),Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "DW_FZ")
Conexion_co2_fasecolda <- DBI::dbConnect(odbc::odbc(),Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "Analitica")
Query_desembolsos = "SELECT
VD.credito,
VD.id_fecha_inicio,
VD.codigo_sucursal,
VD.Desc_Sucursal,
VD.Asesor_Gaviota,
VD.Asesor_Signature,
VD.Concesionario_Gaviota,
VD.Portafolio,
VD.tipo_id,
VD.numero_id_deudor,
VD.nombre,
VD.plazo_en_meses,
VD.Valor_Desembolsado_2,
VD.ValorVh_Signature,
VD.ValorVh_Gaviota,
VD.Valor_Garantia,
VD.[Refi/Res],
VD.Reest_Refinanciado,
VD.Codigo_fasecolda,
VD.clasif,
VD.Vr_garantiaInicial,
VD.vehiculo_uso,
VD.marca_vehiculo,
VD.tipo_vehiculo,
VD.vehiculo_placa,
VD.descripcion_vehiculo,
VD.CondicionVehiculo,
VD.modelo_vehiculo,
VD.Combustible,
VD.Clasificacion_emisiones,
VD.Destino,
FCM.codigo_oficial
FROM [DW_FZ].[dbo].[Vista_Desembolsos] VD
JOIN fact_cartera_master FCM ON VD.credito = FCM.credito
WHERE VD.[Refi/Res] = 0
AND VD.id_fecha_inicio >= 20240101 and VD.credito not in (236005, 236006, 235986)
ORDER BY VD.credito ASC
"
Tabla_desembolsos <- DBI::dbGetQuery(conn = Conexion_Desembolsos,statement = Query_desembolsos)
Tabla_desembolsos <- Tabla_desembolsos %>% mutate(Codigo_fasecolda = stri_pad_left(Codigo_fasecolda,width=8,pad='0'))
Tabla_CO2 <- DBI::dbGetQuery(conn = Conexion_co2_fasecolda, statement = "SELECT * FROM [Analitica].[co2].[guia_fasecolda]")
Tabla_km <- read_excel(paste0(getwd(),'/Archivos/Hoja_tablas.xlsx'),sheet ='Kilometrajes_x_dia')
Tabla_dict_ofi <- read_excel(paste0(getwd(),'/Archivos/Hoja_tablas.xlsx'),sheet ='Diccionario_Cod_Oficial')
HHCC <- Tabla_desembolsos %>% left_join(Tabla_CO2 %>% select(Codigo, Combustible,Clase, Co2_eq_gr_km)
,by = c('Codigo_fasecolda' = 'Codigo')) %>%
rename('Combustible_desembolsos' = 'Combustible.x', 'Combustible_fz' = 'Combustible.y',
'Clase_fasecolda'='Clase') %>%
mutate(Año = str_extract(id_fecha_inicio, pattern = "^\\d{4}"),
Dia = str_extract(id_fecha_inicio, pattern = "\\d{2}$"),
Mes = str_sub(id_fecha_inicio, start = 5, end=6),
Fecha_desembolso = as.Date(paste(Año,Mes,Dia), format= '%Y %m %d'))
HHCC %<>% left_join(Tabla_km %>% select(CLASE,Kmxdia), by = c('Clase_fasecolda' = 'CLASE')) %>%
left_join(Tabla_dict_ofi, by = c('codigo_oficial' = 'Codigo'))
#& Mes != '06'
HHCC %<>% mutate(Co2_g_km_ELT = case_when(Combustible_fz == 'ELT'~
case_when(Clase_fasecolda == 'CAMIONETA PASAJ.' ~ 129.487841723811,
Clase_fasecolda == 'CAMIONETA REPAR' ~ 140.558969409522,
Clase_fasecolda == 'AUTOMOVIL' ~ 117.553169374544,
Clase_fasecolda == 'MOTOCICLETA' ~ 93.0502306097209,
Clase_fasecolda == 'PICK UP DPBLE CAB' ~ 180.328399051248,
TRUE ~ NA),
TRUE ~ NA),
Reduccion = case_when(Combustible_fz %in% c('MHEV','HEV','PHEV','GAS') ~ 0.34,
Combustible_fz %in% c('GSL','DSL') ~ 0.092,
Combustible_fz %in% c('ELT') ~ 1,
TRUE ~ NA),
Ant = Reduccion + 1,
dias_desde_desembolso = as.integer(Sys.Date() - Fecha_desembolso))
end_date <-seq(as.Date(paste(year(Sys.Date()), "-02-01", sep = "")),
as.Date(paste(year(Sys.Date()) + 1, "-01-01", sep = "")),
by = "month") - 1
HHCC %<>% mutate(Enero = case_when(
month(Fecha_desembolso) == 1 ~ day(end_date[1]) - day(Fecha_desembolso),
TRUE ~ NA),
Febrero = case_when(
month(Fecha_desembolso) < 2 & month(Sys.Date()) > 2 ~ day(end_date[2]),
month(Fecha_desembolso) < 2 & month(Sys.Date()) == 2 ~ day(Sys.Date()),
month(Fecha_desembolso) == 2 & month(Sys.Date()) > 2 ~ day(end_date[2]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 2 & month(Sys.Date()) == 2 ~ day(end_date[2]) - day(Fecha_desembolso),
TRUE ~ NA),
Marzo = case_when(
month(Fecha_desembolso) < 3 & month(Sys.Date()) > 3 ~ day(end_date[3]),
month(Fecha_desembolso) < 3 & month(Sys.Date()) == 3 ~ day(Sys.Date()),
month(Fecha_desembolso) == 3 & month(Sys.Date()) > 3 ~ day(end_date[3]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 3 & month(Sys.Date()) == 3 ~ day(end_date[3]) - day(Fecha_desembolso),
TRUE ~ NA),
Abril = case_when(
month(Fecha_desembolso) < 4 & month(Sys.Date()) > 4 ~ day(end_date[4]),
month(Fecha_desembolso) < 4 & month(Sys.Date()) == 4 ~ day(Sys.Date()),
month(Fecha_desembolso) == 4 & month(Sys.Date()) > 4 ~ day(end_date[4]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 4 & month(Sys.Date()) == 4 ~ day(end_date[4]) - day(Fecha_desembolso),
TRUE ~ NA),
Mayo = case_when(
month(Fecha_desembolso) < 5 & month(Sys.Date()) > 5 ~ day(end_date[5]),
month(Fecha_desembolso) < 5 & month(Sys.Date()) == 5 ~ day(Sys.Date()),
month(Fecha_desembolso) == 5 & month(Sys.Date()) > 5 ~ day(end_date[5]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 5 & month(Sys.Date()) == 5 ~ day(end_date[5]) - day(Fecha_desembolso),
TRUE ~ NA),
Junio = case_when(
month(Fecha_desembolso) < 6 & month(Sys.Date()) > 6 ~ day(end_date[6]),
month(Fecha_desembolso) < 6 & month(Sys.Date()) == 6 ~ day(Sys.Date()),
month(Fecha_desembolso) == 6 & month(Sys.Date()) > 6 ~ day(end_date[6]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 6 & month(Sys.Date()) == 6 ~ day(end_date[6]) - day(Fecha_desembolso),
TRUE ~ NA),
Julio = case_when(
month(Fecha_desembolso) < 7 & month(Sys.Date()) > 7 ~ day(end_date[7]),
month(Fecha_desembolso) < 7 & month(Sys.Date()) == 7 ~ day(Sys.Date()),
month(Fecha_desembolso) == 7 & month(Sys.Date()) > 7 ~ day(end_date[7]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 7 & month(Sys.Date()) == 7 ~ day(end_date[7]) - day(Fecha_desembolso),
TRUE ~ NA),
Agosto = case_when(
month(Fecha_desembolso) < 8 & month(Sys.Date()) > 8 ~ day(end_date[8]),
month(Fecha_desembolso) < 8 & month(Sys.Date()) == 8 ~ day(Sys.Date()),
month(Fecha_desembolso) == 8 & month(Sys.Date()) > 8 ~ day(end_date[8]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 8 & month(Sys.Date()) == 8 ~ day(end_date[8]) - day(Fecha_desembolso),
TRUE ~ NA),
Septiembre = case_when(
month(Fecha_desembolso) < 9 & month(Sys.Date()) > 9 ~ day(end_date[9]),
month(Fecha_desembolso) < 9 & month(Sys.Date()) == 9 ~ day(Sys.Date()),
month(Fecha_desembolso) == 9 & month(Sys.Date()) > 9 ~ day(end_date[9]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 9 & month(Sys.Date()) == 9 ~ day(end_date[9]) - day(Fecha_desembolso),
TRUE ~ NA),
Octubre = case_when(
month(Fecha_desembolso) < 10 & month(Sys.Date()) > 10 ~ day(end_date[10]),
month(Fecha_desembolso) < 10 & month(Sys.Date()) == 10 ~ day(Sys.Date()),
month(Fecha_desembolso) == 10 & month(Sys.Date()) > 10 ~ day(end_date[10]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 10 & month(Sys.Date()) == 10 ~ day(end_date[10]) - day(Fecha_desembolso),
TRUE ~ NA),
Noviembre = case_when(
month(Fecha_desembolso) < 11 & month(Sys.Date()) > 11 ~ day(end_date[11]),
month(Fecha_desembolso) < 11 & month(Sys.Date()) == 11 ~ day(Sys.Date()),
month(Fecha_desembolso) == 11 & month(Sys.Date()) > 11 ~ day(end_date[11]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 11 & month(Sys.Date()) == 11 ~ day(end_date[11]) - day(Fecha_desembolso),
TRUE ~ NA),
Diciembre = case_when(
month(Fecha_desembolso) < 12 & month(Sys.Date()) > 12 ~ day(end_date[12]),
month(Fecha_desembolso) < 12 & month(Sys.Date()) == 12 ~ day(Sys.Date()),
month(Fecha_desembolso) == 12 & month(Sys.Date()) > 12 ~ day(end_date[12]) - day(Fecha_desembolso),
month(Fecha_desembolso) == 12 & month(Sys.Date()) == 12 ~ day(end_date[12]) - day(Fecha_desembolso),
TRUE ~ NA))
HHCC %<>% mutate(Km_recorridos_estimados = dias_desde_desembolso * Kmxdia,
Co2_emitido_estimado_ton =
case_when(Combustible_fz == 'ELT' ~ (Co2_g_km_ELT *Km_recorridos_estimados)/1000000,
TRUE ~ (Co2_eq_gr_km * Km_recorridos_estimados)/1000000),
Co2_emision_Ant_ton = Co2_emitido_estimado_ton * Ant)
ACO2 <- HHCC %>% filter(is.na(Categoria) | Categoria != 'Libre inversion') %>%
filter(is.na(marca_vehiculo) | marca_vehiculo != 'OTRAS GARANTIAS') %>%
filter(modelo_vehiculo >= 2018) %>%
filter(!Codigo_fasecolda %in% c(88801002,88801003,88801004))#%>%
View(HHCC)
# LIBRERIAS ---------------------------------------------------------------
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos")
require(pacman)
p_load(tidyverse, magrittr, stringi, readxl, odbc,DBI)
# LIBRERIAS ---------------------------------------------------------------
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos")
require(pacman)
p_load(tidyverse, magrittr, stringi, readxl, odbc,DBI)
## HUELLA DE CARBONO## HUELLA DE CARBONOdb_insert_into()
conexion_co2 <- DBI::dbConnect(odbc(),
Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "Analitica")
HH_CC_FSC <- co2
co2 <- DBI::dbGetQuery(conn = conexion_co2,statement = 'SELECT * FROM Analitica.co2.guia_fasecolda')
HH_CC_FSC <- co2
## DESEMBOLSOS CIERRE
Meses <- "ENERO|JULIO"
files_desembolsos <- list.files("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos/DESEMBOLSOS_N", full.names = T, pattern = '.xlsx|.csv')
Desembolsos_mes <- read_excel(files_desembolsos[which.max(file.info(files_desembolsos)$mtime)], sheet = "AGOSTO")
Desembolsos_mes %<>% mutate(Codigo_fasecolda = stri_pad_left(Codigo_fasecolda,8,'0'))
CO2_FSC <- HH_CC_FSC %>% select(Codigo,Marca, Clase, Co2_eq_gr_km,Combustible) %>% mutate(Codigo = stri_pad_left(Codigo,8, "0"))
# CONFIGURACION DE BASE ---------------------------------------------------
which(names(Desembolsos_mes)=='Codigo_fasecolda')
bd <- Desembolsos_mes %>% left_join(CO2_FSC, by = c('Codigo_fasecolda' = 'Codigo')) %>%
select(1:33,'Marca','Clase','Combustible.x','Co2_eq_gr_km',everything()) %>% mutate(Combustible.x = Combustible.y) %>%
select(-Combustible.y) %>% rename('Combustible' = 'Combustible.x')
openxlsx::write.xlsx(bd, 'DESEMBOLSOS CIERRE AGOSTO (CON MARCA,CLASE).xlsx')
View(bd)
# -------------------------------------------------------------------------
table(bd$tipo_vehiculo)
# -------------------------------------------------------------------------
table(bd$marca_vehiculo)
View(bd)
# -------------------------------------------------------------------------
table(bd$Clase)
# -------------------------------------------------------------------------
table(bd$Marca)
# -------------------------------------------------------------------------
table(bd$Marca) %>% view()
# -------------------------------------------------------------------------
bd$tipo_vehiculo %>% view()
# -------------------------------------------------------------------------
bd %>% group_by(tipo_vehiculo) %>% summarise(n())%>% view()
# -------------------------------------------------------------------------
bd %>% group_by(marca_vehiculo) %>% summarise(n())%>% view()
# -------------------------------------------------------------------------
bd %>% group_by(bd$Clase) %>% summarise(n())%>% view()
bd %>% filter(is.na(clase)) %>% view()
bd %>% filter(is.na(Clase)) %>% view()
### PROMEDIO CO2
bd %>% summarise(mean(Co2_eq_gr_km,na.rm = T))
### PROMEDIO CO2
bd %>% summarise(mean(Co2_eq_gr_km,na.rm = T)) %>% View()
### PROMEDIO CO2
bd %>% group_by(bd$Clase)%>% summarise(mean(Co2_eq_gr_km,na.rm = T)) %>% View()
### PROMEDIO CO2
bd %>% group_by(bd$Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T)) %>% view()
### PROMEDIO CO2
bd %>% group_by(bd$Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T)) %>% view(suma=cumsum(promedio_co2_eq_gr_km,na.rm=T))
### PROMEDIO CO2
bd %>% group_by(bd$Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T)) %>% view(suma=cumsum(promedio_co2_eq_gr_km))
### PROMEDIO CO2
bd %>% group_by(bd$Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T)) %>% mutate(suma=cumsum(promedio_co2_eq_gr_km))
### PROMEDIO CO2
bd %>% group_by(tipo_vehiculo)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
### PROMEDIO CO2
bd %>% group_by(tipo_vehiculo)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))  %>% view()
### PROMEDIO CO2
bd %>% group_by(clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))  %>% view()
### PROMEDIO CO2
bd %>% group_by(Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))  %>% view()
bd %>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))  %>% view()
### PROMEDIO CO2
bd %>% group_by(Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))  %>% view()
View(bd)
table(bd$Concesionario_Gaviota)
bd %>% group_by(Concesionario_Gaviota) %>% summarise(n()) %>% view()
setwd("~/R Scripts and projects/FORWARD LOOKING/FL DV")
require(pacman)
p_load(tidyverse,lubridate,zoo,stringi,magrittr,readxl,openxlsx)
p_load(tseries,forecast,vars,seasonal,tempdisagg,urca,lmtest)
DATAOR <- read_excel('VARIABLES VAR MODEL_10.xlsx') %>% filter(Fecha <= '2024-07-01' & Fecha > '2008-11-30')
DATA_ICV <- read_excel('INDICADORES_CV.xlsx')
DATA_ICV %<>% dplyr::select(-c(id_fecha.ICVS_PJ,id_fecha.ICVS_PN,id_fecha.ICCS_PJ,id_fecha.ICCS_PN))
DATA_ICV %<>% sapply(function(x) x*100) %>% data.frame()
DATA_CONS <- cbind(DATAOR,DATA_ICV)
DATA <- DATA_CONS %>% rename('TGP' = 'Tasa.Global.de.Participación..TGP.',
'TO' = 'Tasa.de.Ocupación..TO.',
'TD' ='Tasa.de.Desocupación..TD.') %>%
filter(Fecha <= '2024-05-01' & Fecha > '2009-12-30')
prueba_st <- DATA_ICV %>% sapply(function (x){return(diff(x))}) %>%
data.frame %>%
sapply(function (y){return(adf.test(y)$p.value)})
prueba_st
# COVID -------------------------------------------------------------------
COVID <- DATA %>% dplyr::select(COVID) %>%
slice(-c(1:2) )%>% ts(start = c(2010,1),frequency = 12)
COVID <- DATA %>% dplyr::select(COVID) %>%
slice(-c(1) )%>% ts(start = c(2015,1),frequency = 12)
ts.plot(cbind(DATA$ICV60,DATA$ICC60) %>% ts(start = c(2010,1),frequency = 12),
col=c('darkgreen','darkred'), main='ICV60', xlab="",ylab='(%)')
legend(x= 2012, y = 14,c('ICV60','ICV30'), col=c('darkgreen','darkred'),
lty = c(1,1), cex = 0.35)
DATA_PREP <- DATA %>% dplyr::select(ISE=ISE.D,M1=M1_D,TI,TES.5Y.1Y,ICV60)  %>%
mutate(ISE = log(ISE),
M1 = log(M1),
TI = log(TI)
) %>%
ts(start = c(2010,1),frequency = 12) %>% diff()
### VARIABLES INTEGRADAS DE ORDEN 2
INFLACION <- DATA %>% dplyr::select(IPC=IPC_D)  %>%
mutate(IPC = log(IPC)) %>%
ts(start = c(2010,1),frequency = 12) %>% diff() %>% diff()
### UNION DE ARCHIVOS
DATA_MOD <- DATA_PREP %>% merge.zoo(INFLACION,all = F)
cor(DATA_MOD)
###
prueba_st <- DATA_MOD %>% sapply(function (x){ return(adf.test(x)$p.value)})
prueba_st
model <- VARselect(DATA_MOD, lag.max = 15, type = 'const')
model$selection
model <- VAR(DATA_MOD, p =3,type = 'const')
View(DATA_MOD)
serial.test(model, lags.pt = 12)
roots(model)
normality.test(model)
arch.test(model, lags.multi = 12, multivariate.only = T)
summary(model$varresult$ICV60)
stability1 <- stability(model, type = "OLS-CUSUM")
plot(stability1)
causality(model, cause = 'TES.5Y.1Y' )
par(mfrow = c(1, 1))
x <- vars::irf(model, impulse = 'ICV60', response = 'ICV60', lag.ahead = 12, ci=0.9,boot = T)
plot(x)
x <- vars::irf(model, impulse = 'ICV60', response = 'ICV60', lag.ahead = 12, ci=0.95,boot = T)
plot(x)
x <- vars::irf(model, impulse = 'ISE', response = 'ICV60', lag.ahead = 12, ci=0.95,boot = T)
plot(x)
x <- vars::irf(model, impulse = 'TES.5Y.1Y', response = 'ICV60', lag.ahead = 12, ci=0.95,boot = T)
plot(x)
x <- vars::irf(model, impulse = 'TES.5Y.1Y', response = 'ICV60', lag.ahead = 12, ci=0.90,boot = T)
plot(x)
x <- vars::irf(model, impulse = 'IPC', response = 'ICV60', lag.ahead = 12, ci=0.90,boot = T)
plot(x)
x <- vars::irf(model, impulse = 'IPC', response = 'ICV60', lag.ahead = 12, ci=0.95,boot = T)
plot(x)
# LIBRERIAS ---------------------------------------------------------------
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos")
require(pacman)
p_load(tidyverse, magrittr, stringi, readxl, odbc,DBI)
## HUELLA DE CARBONO## HUELLA DE CARBONOdb_insert_into()
conexion_co2 <- DBI::dbConnect(odbc(),
Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "Analitica")
co2 <- DBI::dbGetQuery(conn = conexion_co2,statement = 'SELECT * FROM Analitica.co2.guia_fasecolda')
HH_CC_FSC <- co2
## DESEMBOLSOS CIERRE
Meses <- "ENERO|JULIO"
files_desembolsos <- list.files("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos/DESEMBOLSOS_N", full.names = T, pattern = '.xlsx|.csv')
Desembolsos_mes <- read_excel(files_desembolsos[which.max(file.info(files_desembolsos)$mtime)], sheet = "AGOSTO")
Desembolsos_mes %<>% mutate(Codigo_fasecolda = stri_pad_left(Codigo_fasecolda,8,'0'))
CO2_FSC <- HH_CC_FSC %>% select(Codigo,Marca, Clase, Co2_eq_gr_km,Combustible) %>% mutate(Codigo = stri_pad_left(Codigo,8, "0"))
# CONFIGURACION DE BASE ---------------------------------------------------
which(names(Desembolsos_mes)=='Codigo_fasecolda')
# LIBRERIAS ---------------------------------------------------------------
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos")
require(pacman)
p_load(tidyverse, magrittr, stringi, readxl, odbc,DBI)
## HUELLA DE CARBONO## HUELLA DE CARBONOdb_insert_into()
conexion_co2 <- DBI::dbConnect(odbc(),
Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "Analitica")
co2 <- DBI::dbGetQuery(conn = conexion_co2,statement = 'SELECT * FROM Analitica.co2.guia_fasecolda')
HH_CC_FSC <- co2
## DESEMBOLSOS CIERRE
Meses <- "ENERO|JULIO"
files_desembolsos <- list.files("C:/Users/ivan.villalba/Documents/R Scripts and projects/GUIA FASECOLDA/Codigo fasecolda - Desembolsos/DESEMBOLSOS_N", full.names = T, pattern = '.xlsx|.csv')
Desembolsos_mes <- read_excel(files_desembolsos[which.max(file.info(files_desembolsos)$mtime)], sheet = "AGOSTO")
Desembolsos_mes %<>% mutate(Codigo_fasecolda = stri_pad_left(Codigo_fasecolda,8,'0'))
CO2_FSC <- HH_CC_FSC %>% select(Codigo,Marca, Clase, Co2_eq_gr_km,Combustible) %>% mutate(Codigo = stri_pad_left(Codigo,8, "0"))
# CONFIGURACION DE BASE ---------------------------------------------------
which(names(Desembolsos_mes)=='Codigo_fasecolda')
bd <- Desembolsos_mes %>% left_join(CO2_FSC, by = c('Codigo_fasecolda' = 'Codigo')) %>%
select(1:33,'Marca','Clase','Combustible.x','Co2_eq_gr_km',everything()) %>% mutate(Combustible.x = Combustible.y) %>%
select(-Combustible.y) %>% rename('Combustible' = 'Combustible.x')
openxlsx::write.xlsx(bd, 'DESEMBOLSOS CIERRE AGOSTO (CON MARCA,CLASE).xlsx')
### PROMEDIO CO2
por_clase <- bd %>% group_by(Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
general <- bd %>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
table(bd$Concesionario_Gaviota)
bd %>% group_by(Concesionario_Gaviota) %>% summarise(n()) %>% view()
View(por_clase)
View(general)
View(Desembolsos_mes)
### PROMEDIO CO2
por_clase <- bd %>% group_by(marca_vehiculo)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
### PROMEDIO CO2
por_clase <- bd %>% group_by(Marca)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
View(bd)
### PROMEDIO CO2
por_clase <- bd %>% group_by(Clase)%>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
general <- bd %>% summarise(promedio_co2_eq_gr_km=mean(Co2_eq_gr_km,na.rm = T))
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/VALORACION P70")
require(pacman)
p_load(tidyverse, lubridate, stringi, readxl, openxlsx, DBI, odbc,magrittr)
options(scipen=999)
Conexion_comite <- DBI::dbConnect(odbc::odbc(),Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "DW_FZ")
QUERY <- "SELECT id_fecha,
credito,
tipo_id_deudor,
id_fecha_desembolso,
id_fecha_primera_factura,
valor_desembolso,
numero_dias_mora,
saldo_capital,
saldo_interes,
saldo_seguros,
saldo_mora,
valor_canc_capital_intereses_seguros,
tipo_producto,
base_de_provision,
total_deuda,
valor_garantia,
ROW_NUMBER() over(partition by credito order by id_fecha asc) as orden
FROM Fact_Cartera_Mes"
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/VALORACION P70")
require(pacman)
p_load(tidyverse, lubridate, stringi, readxl, openxlsx, DBI, odbc,magrittr)
options(scipen=999)
Conexion_comite <- DBI::dbConnect(odbc::odbc(),Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "DW_FZ")
QUERY <- "SELECT id_fecha,
credito,
tipo_id_deudor,
id_fecha_desembolso,
id_fecha_primera_factura,
valor_desembolso,
numero_dias_mora,
saldo_capital,
saldo_interes,
saldo_seguros,
saldo_mora,
valor_canc_capital_intereses_seguros,
tipo_producto,
base_de_provision,
total_deuda,
valor_garantia,
ROW_NUMBER() over(partition by credito order by id_fecha asc) as orden
FROM Fact_Cartera_Mes"
QUERY_REC <- "SELECT credito, id_fecha_efe_mov, cod_trans, valor_pago_capital FROM DW_FZ.dbo.Fact_Recaudo WHERE cod_trans = 88"
Tabla_comite <- DBI::dbGetQuery(conn = Conexion_comite, statement = QUERY)
