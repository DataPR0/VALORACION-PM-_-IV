mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital))
View(cartera_cc3)
openxlsx::write.xlsx(list(castigos_corte=cartera_cc3,castigos_ultimo_registro_comite=cartera_cc),'Cartera CC.xlsx')
cartera_cc2 <- Comite2 %>% filter(credito %in% creditos_dia$credito) %>% left_join(primera_fecha,by='credito') %>%
group_by(credito) %>% slice(which.max(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital),
valor_desembolsos = sum(valor_desembolso))
View(cartera_cc2)
cartera_cc2 <- Comite2 %>% filter(credito %in% creditos_dia$credito) %>% left_join(primera_fecha,by='credito') %>%
left_join(primer_desembolso,by='credito') %>%
group_by(credito) %>% slice(which.max(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital),
valor_desembolsos = sum(valor_desembolso))
cartera_cc3 <- tabla_icvs %>% filter(id_fecha==20241101 & tipo_producto %in% c(61,71)) %>% left_join(primera_fecha,by='credito') %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital),
valor_desembolso = sum(valor_desembolso))
cartera_cc2 <- Comite2 %>% filter(credito %in% creditos_dia$credito) %>% left_join(primera_fecha,by='credito') %>%
left_join(primer_desembolso,by='credito') %>%
group_by(credito) %>% slice(which.max(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital),
valor_desembolsos = sum(valor_desembolso))
primer_desembolso <- Comite2 %>% group_by(credito) %>% slice(which.min(id_fecha)) %>% summarise(valor_desembolso_or = valor_desembolso)
cartera_cc2 <- Comite2 %>% filter(credito %in% creditos_dia$credito) %>% left_join(primera_fecha,by='credito') %>%
left_join(primer_desembolso,by='credito') %>%
group_by(credito) %>% slice(which.max(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital),
valor_desembolsos = sum(valor_desembolso_or))
cartera_cc3 <- tabla_icvs %>% filter(id_fecha==20241101 & tipo_producto %in% c(61,71)) %>% left_join(primera_fecha,by='credito') %>%
left_join(primer_desembolso,by='credito') %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014,'00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(num_creditos=n(),
saldo_capital= sum(saldo_capital),
valor_desembolso = sum(valor_desembolso_or))
openxlsx::write.xlsx(list(castigos_corte=cartera_cc3,castigos_ultimo_registro_comite=cartera_cc2),'Cartera CC.xlsx')
TAB_DESEMBOLSOS2 <- Comite %>% filter(!credito %in% marcacion$Credito & id_fecha<=20231031) %>% left_join(primera_fecha,by='credito') %>%
group_by(credito) %>% slice(which.min(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014, '00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(Cosecha = sum(valor_desembolso),
n = n())
TAB_DESEMBOLSOS2 <- Comite2 %>% filter(!credito %in% marcacion$Credito & id_fecha<=20231031) %>% left_join(primera_fecha,by='credito') %>%
group_by(credito) %>% slice(which.min(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014, '00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(Cosecha = sum(valor_desembolso),
n = n())
marcacion <- DBI::dbGetQuery(conn = Conexion_38,statement = 'SELECT * FROM DW_FZ.dbo.Fact_Cartera_Marcacion_RFS')
TAB_DESEMBOLSOS2 <- Comite2 %>% filter(!credito %in% marcacion$Credito & id_fecha<=20231031) %>% left_join(primera_fecha,by='credito') %>%
group_by(credito) %>% slice(which.min(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014, '00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(Cosecha = sum(valor_desembolso),
n = n())
TAB_DESEMBOLSOS2 <- Comite2 %>% filter(!credito %in% marcacion$Credito & id_fecha<=20241031) %>% left_join(primera_fecha,by='credito') %>%
group_by(credito) %>% slice(which.min(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014, '00',Año_cosecha)) %>%
group_by(Año_tabla) %>% summarise(Cosecha = sum(valor_desembolso),
n = n())
View(TAB_DESEMBOLSOS2)
openxlsx::write.xlsx(TAB_DESEMBOLSOS2,'TOTAL DESEMBOLSOS_24_unidades.xlsx')
View(TAB_DESEMBOLSOS2)
TAB_DESEMBOLSOS2 <- Comite2 %>% filter(!credito %in% marcacion$Credito & id_fecha<=20241031) %>% left_join(primera_fecha,by='credito') %>%
group_by(credito) %>% slice(which.min(id_fecha)) %>%
mutate(Año_cosecha = str_sub(id_fecha_desembolso_or,1,4),
Año_tabla = ifelse(Año_cosecha < 2014, '00',Año_cosecha))# %>%
TAB_DESEMBOLSOS2 %>% distinct(credito) %>% nrow()
# DIRECTORIO DE TRABAJO ---------------------------------------------------
setwd("~/R Scripts and projects/EMISIONES CO2")
require(pacman)
p_load(tidyverse, magrittr, lubridate, stringi, readxl, openxlsx, odbc, DBI)
Conexion_Desembolsos <- DBI::dbConnect(odbc::odbc(),Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "DW_FZ")
Conexion_co2_fasecolda <- DBI::dbConnect(odbc::odbc(),Driver = "SQL Server",Server = '192.168.50.38\\DW_FZ',
Trusted_Connection = "yes",timeout = 1000, database = "Analitica")
Query <- 'SELECT t7.*, t8.id_fecha_inicio, t8.modelo_vehiculo_CD
FROM (SELECT t5.*, t6.codigo_fasecolda_des, t6.modelo_vehiculo_des
FROM (SELECT t3.*, t4.ultima_fecha_foto_mes
FROM (SELECT t1.*, t2.*
FROM (SELECT credito, id_fecha ,id_fecha_desembolso, tipo_producto, codigo_oficial, modelo_vehiculo
FROM DW_FZ.dbo.Fact_Cartera_Mes WHERE id_fecha >= 20240000) as t1
LEFT JOIN (SELECT Codigo, "Tipo de crédito"
FROM Cartera175.dbo.Comite_dim_codigooficial) as t2
on t1.codigo_oficial = t2.Codigo) t3
LEFT JOIN (SELECT credito, ultima_fecha_foto_mes
FROM DW_FZ.dbo.Fact_Cartera_Master) as t4
on t3.credito =t4.credito) as t5
LEFT JOIN (SELECT credito, codigo_fasecolda as codigo_fasecolda_des, modelo_vehiculo as modelo_vehiculo_des
FROM DW_FZ.dbo.Vista_Desembolsos) as t6
on t5.credito = t6.credito) as t7
LEFT JOIN (SELECT credito, id_fecha_inicio, modelo_vehiculo as modelo_vehiculo_CD
FROM DW_FZ.dbo.Fact_Cartera_Desembolsos) as t8
on t7.credito=t8.credito'
cartera <- DBI::dbGetQuery(conn=Conexion_Desembolsos,statement = Query)
fasecolda <- DBI::dbGetQuery(conn=Conexion_co2_fasecolda,statement = 'SELECT * FROM Analitica.co2.guia_fasecolda')
garantias <- DBI::dbGetQuery(conn = Conexion_Desembolsos,
statement = "SELECT * FROM DW_FZ.dbo.Fact_Garantias WHERE id_fecha >= 20240000")
base_general <- cartera %>% distinct()
datos_origen <- base_general %>% group_by(credito) %>%
slice(which.min(id_fecha)) %>%
summarise(
modelo_vehiculo_origen = modelo_vehiculo,
codigo_oficial_origen = codigo_oficial)
ult_fecha_desembolso <- base_general %>% group_by(credito) %>%
slice(which.min(id_fecha):(which.min(id_fecha) +1) ) %>%
summarise(fecha_desembolso_origen = id_fecha_desembolso) %>%
mutate(orden = order(credito)) %>%
slice(which.min(orden))
primera_placa <- garantias %>% select(credito,fecha_garantia= id_fecha, vehiculo_placa,
vehiculo_marca,vehiculo_descripcion,
vehiculo_codigo_fasecolda,
vehiculo_modelo) %>%
group_by(credito) %>%
slice(which.min(fecha_garantia))
ult_fecha_aparicion <- base_general %>% group_by(credito) %>%
slice(which.max(id_fecha)) %>%
summarise(id_fecha_ultima= id_fecha)
bd <- base_general %>% left_join(datos_origen, by='credito') %>%
left_join(ult_fecha_desembolso,by='credito') %>%
left_join(primera_placa,by='credito') %>%
left_join(ult_fecha_aparicion,by='credito') %>%
mutate(vehiculo_codigo_fasecolda = stri_pad_left(vehiculo_codigo_fasecolda,width=8,pad='0'),
codigo_fasecolda_des = stri_pad_left(codigo_fasecolda_des,width=8,pad='0'),
codigo_oficial=as.numeric(codigo_oficial),
codigo_oficial_origen=as.numeric(codigo_oficial_origen),
ultima_fecha_foto_mes = ifelse(is.na(ultima_fecha_foto_mes),id_fecha_ultima,ultima_fecha_foto_mes)) %>%
filter(`Tipo de crédito`=='Vehicular') %>%
left_join(fasecolda, by=c('vehiculo_codigo_fasecolda'='Codigo'))
bd %>% dplyr::select(credito,vehiculo_modelo,modelo_vehiculo_origen,modelo_vehiculo_CD) %>% distinct() %>%
mutate(match = vehiculo_modelo==modelo_vehiculo_origen, match2=vehiculo_modelo==modelo_vehiculo_CD) %>%
filter(match ==F & (modelo_vehiculo_origen >=2018 | vehiculo_modelo >=2018) & match2==T)%>% View()
Tabla_km <- read_excel(paste0(getwd(),'/Archivos/Hoja_tablas.xlsx'),sheet ='Kilometrajes_x_dia')
Tabla_dict_ofi <- read_excel(paste0(getwd(),'/Archivos/Hoja_tablas.xlsx'),sheet ='Diccionario_Cod_Oficial')
HHCC <- bd %>% select(credito, id_fecha_desembolso= fecha_desembolso_origen,id_fecha=id_fecha_ultima,
modelo_vehiculo=modelo_vehiculo_origen,
codigo_fasecolda= vehiculo_codigo_fasecolda,codigo_fasecolda_des,
Combustible,Co2_eq_ton_km,Co2_eq_gr_km,
codigo_oficial_origen,Clase, `Tipo de crédito`, Marca) %>% distinct()
HHCC <- HHCC %>%
mutate(Año = str_extract(id_fecha_desembolso, pattern = "^\\d{4}"),
Dia = str_extract(id_fecha_desembolso, pattern = "\\d{2}$"),
Mes = str_sub(id_fecha_desembolso, start = 5, end=6),
Fecha_desembolso = as.Date(paste(Año,Mes,Dia), format= '%Y %m %d'),
Mes = ifelse(Año < 2024,'00',Mes))
HHCC %<>% left_join(Tabla_km %>% select(CLASE,Kmxdia), by = c('Clase' = 'CLASE')) %>%
left_join(Tabla_dict_ofi, by = c('codigo_oficial_origen' = 'Codigo'))
# -------------------------------------------------------------------------
HHCC %<>% mutate(id_fecha = as.Date(id_fecha,'%Y%m%d'),
id_fecha_desembolso = as.Date(id_fecha_desembolso,'%Y%m%d'))
### CONFIGURACION COMBUSTIBLES ELT
HHCC %<>% mutate(Co2_g_km_ELT = case_when(Combustible == 'ELT'~
case_when(Clase == 'CAMIONETA PASAJ.' ~ 129.487841723811,
Clase == 'CAMIONETA REPAR' ~ 140.558969409522,
Clase == 'AUTOMOVIL' ~ 117.553169374544,
Clase == 'MOTOCICLETA' ~ 93.0502306097209,
Clase == 'PICK UP DPBLE CAB' ~ 180.328399051248,
TRUE ~ NA),
TRUE ~ NA),
Reduccion = case_when(Combustible %in% c('MHEV','HEV','PHEV','GAS') ~ 0.34,
Combustible %in% c('GSL','DSL') ~ 0.092,
Combustible %in% c('ELT') ~ 1,
TRUE ~ NA),
Ant = Reduccion + 1,
dias_desde_desembolso = as.integer(id_fecha - Fecha_desembolso))
end_date <-seq(as.Date(paste(year(Sys.Date()), "-02-01", sep = "")),
as.Date(paste(year(Sys.Date()) + 1, "-01-01", sep = "")),
by = "month") - 1
HHCC %<>% mutate(Enero = case_when(
(year(id_fecha_desembolso) < 2024 & year(id_fecha)>=2024) | (year(id_fecha_desembolso)== 2024 & month(id_fecha_desembolso)==1) ~ as.integer(end_date[1] - id_fecha_desembolso),
TRUE ~ NA),
Febrero = case_when(
id_fecha < end_date[2] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[2]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 2 & month(Sys.Date()) > 2 ~ day(end_date[2]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 2 & month(Sys.Date()) == 2 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 2 & month(Sys.Date()) > 2 ~ day(end_date[2]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 2 & month(Sys.Date()) == 2 ~ day(end_date[2]) - day(id_fecha_desembolso),
TRUE ~ NA),
Marzo = case_when(
id_fecha < end_date[3] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[3]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 3 & month(Sys.Date()) > 3 ~ day(end_date[3]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 3 & month(Sys.Date()) == 3 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 3 & month(Sys.Date()) > 3 ~ day(end_date[3]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 3 & month(Sys.Date()) == 3 ~ day(end_date[3]) - day(id_fecha_desembolso),
TRUE ~ NA),
Abril = case_when(
id_fecha < end_date[4] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[4]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 4 & month(Sys.Date()) > 4 ~ day(end_date[4]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 4 & month(Sys.Date()) == 4 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 4 & month(Sys.Date()) > 4 ~ day(end_date[4]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 4 & month(Sys.Date()) == 4 ~ day(end_date[4]) - day(id_fecha_desembolso),
TRUE ~ NA),
Mayo = case_when(
id_fecha < end_date[5] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[5]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 5 & month(Sys.Date()) > 5 ~ day(end_date[5]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 5 & month(Sys.Date()) == 5 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 5 & month(Sys.Date()) > 5 ~ day(end_date[5]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 5 & month(Sys.Date()) == 5 ~ day(end_date[5]) - day(id_fecha_desembolso),
TRUE ~ NA),
Junio = case_when(
id_fecha < end_date[6] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[6]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 6 & month(Sys.Date()) > 6 ~ day(end_date[6]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 6 & month(Sys.Date()) == 6 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 6 & month(Sys.Date()) > 6 ~ day(end_date[6]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 6 & month(Sys.Date()) == 6 ~ day(end_date[6]) - day(id_fecha_desembolso),
TRUE ~ NA),
Julio = case_when(
id_fecha < end_date[7] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[7]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 7 & month(Sys.Date()) > 7 ~ day(end_date[7]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 7 & month(Sys.Date()) == 7 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 7 & month(Sys.Date()) > 7 ~ day(end_date[7]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 7 & month(Sys.Date()) == 7 ~ day(end_date[7]) - day(id_fecha_desembolso),
TRUE ~ NA),
Agosto = case_when(
id_fecha < end_date[8] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[8]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 8 & month(Sys.Date()) > 8 ~ day(end_date[8]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 8 & month(Sys.Date()) == 8 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 8 & month(Sys.Date()) > 8 ~ day(end_date[8]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 8 & month(Sys.Date()) == 8 ~ day(end_date[8]) - day(id_fecha_desembolso),
TRUE ~ NA),
Septiembre = case_when(
id_fecha < end_date[9] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[9]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 9 & month(Sys.Date()) > 9 ~ day(end_date[9]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 9 & month(Sys.Date()) == 9 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 9 & month(Sys.Date()) > 9 ~ day(end_date[9]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 9 & month(Sys.Date()) == 9 ~ day(end_date[9]) - day(id_fecha_desembolso),
TRUE ~ NA),
Octubre = case_when(
id_fecha < end_date[10] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[10]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 10 & month(Sys.Date()) > 10 ~ day(end_date[10]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 10 & month(Sys.Date()) == 10 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 10 & month(Sys.Date()) > 10 ~ day(end_date[10]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 10 & month(Sys.Date()) == 10 ~ day(end_date[10]) - day(id_fecha_desembolso),
TRUE ~ NA),
Noviembre = case_when(
id_fecha < end_date[11] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[11]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 11 & month(Sys.Date()) > 11 ~ day(end_date[11]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 11 & month(Sys.Date()) == 11 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 11 & month(Sys.Date()) > 11 ~ day(end_date[11]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 11 & month(Sys.Date()) == 11 ~ day(end_date[11]) - day(id_fecha_desembolso),
TRUE ~ NA),
Diciembre = case_when(
id_fecha < end_date[12] ~ NA,
year(id_fecha_desembolso) < 2024 ~ day(end_date[12]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 12 & month(Sys.Date()) > 12 ~ day(end_date[12]),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) < 12 & month(Sys.Date()) == 12 ~ day(Sys.Date()),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 12 & month(Sys.Date()) > 12 ~ day(end_date[12]) - day(id_fecha_desembolso),
year(id_fecha_desembolso) == 2024 & month(id_fecha_desembolso) == 12 & month(Sys.Date()) == 12 ~ day(end_date[12]) - day(id_fecha_desembolso),
TRUE ~ NA))
HHCC %<>% mutate(Km_recorridos_estimados = dias_desde_desembolso * Kmxdia,
Co2_emitido_estimado_ton =
case_when(Combustible == 'ELT' ~ (Co2_g_km_ELT *Km_recorridos_estimados)/1000000,
TRUE ~ (Co2_eq_gr_km * Km_recorridos_estimados)/1000000),
Co2_emision_Ant_ton = Co2_emitido_estimado_ton * Ant)
ACO2 <- HHCC %>% filter(is.na(`Tipo de crédito`) | `Tipo de crédito` != 'Libre inversion') %>%
#filter(is.na(Marca) | Marca != 'OTRAS GARANTIAS') %>%
filter(modelo_vehiculo >= 2018)
ACO2 <- HHCC %>% filter(is.na(`Tipo de crédito`) | `Tipo de crédito` != 'Libre inversion') %>%
#filter(is.na(Marca) | Marca != 'OTRAS GARANTIAS') %>%
filter(modelo_vehiculo >= 2018) %>%
#filter(!codigo_fasecolda %in% c(88801002,88801003,88801004,99900234,99900217,99900228))
filter(str_detect(codigo_fasecolda,'^888|^999|^00000000') ==F)
ACO2 %>% group_by(!is.na(codigo_fasecolda) & str_detect(codigo_fasecolda,'^888|^999|00000000')) %>% summarise(n=n()) %>% ungroup() %>%
mutate(p = n/sum(n))
EV <- ACO2 %>% group_by(Mes) %>%
summarise(n=n(),
Ton_Enero = sum(Reduccion*Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum(Reduccion*Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum(Reduccion*Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum(Reduccion*Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum(Reduccion*Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum(Reduccion*Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum(Reduccion*Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum(Reduccion*Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum(Reduccion*Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum(Reduccion*Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum(Reduccion*Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum(Reduccion*Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
Actual1 <- ACO2 %>% group_by(Mes) %>%
summarise(n = n(), Ton_Enero = sum(Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum(Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum(Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum(Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum(Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum(Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum(Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum(Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum(Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum(Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum(Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum(Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
Anterior <- ACO2 %>% group_by(Mes) %>%
summarise(Ton_Enero = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Enero/dias_desde_desembolso) , na.rm = T),
Ton_Febrero = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Febrero/dias_desde_desembolso) , na.rm = T),
Ton_Marzo = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Marzo/dias_desde_desembolso) , na.rm = T),
Ton_Abril = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Abril/dias_desde_desembolso) , na.rm = T),
Ton_Mayo = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Mayo/dias_desde_desembolso) , na.rm = T),
Ton_Junio = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Junio/dias_desde_desembolso) , na.rm = T),
Ton_Julio = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Julio/dias_desde_desembolso) , na.rm = T),
Ton_Agosto = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Agosto/dias_desde_desembolso) , na.rm = T),
Ton_Septiembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Septiembre/dias_desde_desembolso) , na.rm = T),
Ton_Octubre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Octubre/dias_desde_desembolso) , na.rm = T),
Ton_Noviembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Noviembre/dias_desde_desembolso) , na.rm = T),
Ton_Diciembre = sum((1+Reduccion)*Co2_emitido_estimado_ton * (Diciembre/dias_desde_desembolso) , na.rm = T))
View(Actual1)
### DIRECTORIO DE TRABAJO
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/VALORACION P70/ARCHIVO PARA VALORACION/")
options(scipen=999,digits = 20)
# CARTERA PROMOCOMERCIO - SUMINISTRADA POR CONTABILIDAD
CARTERA_PD70 <- read_excel('Base creditos PM Octubre_24.xlsx', skip = 3) %>% filter(!is.na(Credito))
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
VALORACION_PD70 <- read_csv2('VALORACION_PRUEBA_pd70_total_Octubre.csv')
VALORACION_PD70 %<>%   mutate(Valoracion_pd_mod = case_when(
tasa_recuperacion_anual > 0 & LTV <= 0.8 ~ 1*(1+ tasa_recuperacion_anual)*(1+(1/LTV)*(1/Duracion_p10)),
tasa_recuperacion_anual == 0 & LTV <= 0.6 ~ 1*(1+0.6*(1/LTV)),
TRUE ~ 1*(1+tasa_recuperacion_anual)))
ZZ <- CARTERA_PD70 %>% filter(`Suma de Importe base`>0.0001) %>%
left_join(VALORACION_PD70,
by = c('Credito'='credito')) %>%
filter(!is.na(valor_pago_ttl_canc)) %>%
rename('Saldo Actual'='Suma de Importe base') %>%
mutate(Precio_y_valoracion=`Precio de compra`* Valoracion_pd,
Precio_y_valoracion_mod= `Precio de compra`*Valoracion_pd_mod)
X <- CARTERA_PD70 %>% filter(`Suma de Importe base`>0.0001) %>%
left_join(VALORACION_PD70,
by = c('Credito'='credito')) %>%
filter(is.na(valor_pago_ttl_canc)) %>%
rename('Saldo Actual'='Suma de Importe base') %>%
mutate(Precio_y_valoracion=`Precio de compra`* Valoracion_pd)
tabla_valoracion <- ZZ %>% filter(`Saldo Actual`>0.000001) %>% group_by(tipo_producto) %>% summarise(Creditos = n(),
Deuda_total = sum(valor_pago_ttl_canc, na.rm = T),
Saldo_a_capital = sum(`Saldo Actual`,na.rm = T),
Precio_de_compra= sum(`Precio de compra`, na.rm = T),
Valoracion = sum(Precio_y_valoracion,na.rm = T),
Valoracion_mod = sum(Precio_y_valoracion_mod,na.rm = T)) %>%
mutate(p =Valoracion/Precio_de_compra-1,
p_mod = Valoracion_mod/Precio_de_compra-1)
residuo <- X %>% filter(`Saldo Actual`>0.000001) %>%
select(Credito,valor_pago_ttl_canc,`Saldo Actual`,`Precio de compra`,Precio_y_valoracion)
residuo_agrupado <-  residuo %>%
summarise(Creditos = n(),
Deuda_total = sum(valor_pago_ttl_canc, na.rm = T),
Saldo_a_capital = sum(`Saldo Actual`,na.rm = T),
Precio_de_compra= sum(`Precio de compra`, na.rm = T),
Valoracion = sum(Precio_y_valoracion,na.rm = T)) %>%
mutate(p =Valoracion/Precio_de_compra-1)
### 70
tabla_p70 <- ZZ %>% filter(tipo_producto==70) %>% select(Credito,'Saldo a capital'=`Saldo Actual`, Compra = `Precio de compra`, Precio_y_valoracion_mod) %>%
mutate(VG = Precio_y_valoracion_mod/Compra -1  ,
'Valoracion con garantia' = ifelse(is.na(VG),0,VG)) %>% select(-c(Precio_y_valoracion_mod,VG))
### 71
tabla_p71 <- ZZ %>% filter(tipo_producto==71) %>% select(Credito,'Saldo a capital'=`Saldo Actual`, Compra = `Precio de compra`) %>%
mutate('Valoracion con garantia' = 0)
View(tabla_valoracion)
query_dia <- str_glue("SELECT saldo_capital,
tipo_producto,
credito,
valor_pago_ttl_canc
FROM [DW_FZ].[dbo].[Fact_Cartera_Dia]
where tipo_producto in (70,71) and saldo_capital > 0 and id_fecha = {Sys.Date()}")
query_dia
end_date <-seq(as.Date(paste(year(Sys.Date()), "-02-01", sep = "")),
as.Date(paste(year(Sys.Date()) + 1, "-01-01", sep = "")),
by = "month") - 1
query_dia <- str_glue("SELECT saldo_capital,
tipo_producto,
credito,
valor_pago_ttl_canc
FROM [DW_FZ].[dbo].[Fact_Cartera_Dia]
where tipo_producto in (70,71) and saldo_capital > 0 and id_fecha = {end_date[month(Sys.Date())-1]}")
query_dia
query_dia <- str_glue("SELECT saldo_capital,
tipo_producto,
credito,
valor_pago_ttl_canc
FROM [DW_FZ].[dbo].[Fact_Cartera_Dia]
where tipo_producto in (70,71) and saldo_capital > 0 and id_fecha = {str_replace(end_date[month(Sys.Date())-1],'-','')}")
query_dia
query_dia <- str_glue("SELECT saldo_capital,
tipo_producto,
credito,
valor_pago_ttl_canc
FROM [DW_FZ].[dbo].[Fact_Cartera_Dia]
where tipo_producto in (70,71) and saldo_capital > 0 and id_fecha = {str_replace_all(end_date[month(Sys.Date())-1],'-','')}")
query_dia
# CRUCE CARTERA DIA -------------------------------------------------------
fecha_actual = str_replace_all(end_date[month(Sys.Date())-1],'-','')
query_dia <- str_glue("SELECT saldo_capital,
tipo_producto,
credito,
valor_pago_ttl_canc
FROM [DW_FZ].[dbo].[Fact_Cartera_Dia]
where tipo_producto in (70,71) and saldo_capital > 0 and id_fecha = {fecha_actual}")
query_dia
### DIRECTORIO DE TRABAJO
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/VALORACION P70/ARCHIVO PARA VALORACION/")
options(scipen=999,digits = 20)
# CARTERA PROMOCOMERCIO - SUMINISTRADA POR CONTABILIDAD
CARTERA_PD70 <- read_excel('Base creditos PM Octubre_24.xlsx', skip = 3) %>% filter(!is.na(Credito))
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
archivos <- list.files(pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T)
archivos
VALORACION_PD70 <- read_csv2(which.max(file.info(archivos)$mtime))
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
archivos <- list.files(pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T)
VALORACION_PD70 <- read_csv2(which.max(file.info(archivos)$mtime))
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
archivos <- file.info(list.files(pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T))
VALORACION_PD70 <- read_csv2(which.max(archivos$mtime))
pacman::p_load(tidyverse, lubridate, stringi, readxl, openxlsx, DBI, odbc, magrittr, caret, reshape2,gtools)
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
archivos <- file.info(list.files(pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T))
VALORACION_PD70 <- read_csv2(which.max(archivos$mtime))
archivos$mtime
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
archivos <- file.info(list.files(pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T))
archivos
VALORACION_PD70 <- read_csv2(archivos[which.max(file.info(archivos)$mtime)])
# CARTERA CON TASA DE RECUPERACION - ESQUEMA ELABORADO PREVIAMENTE
archivos <- list.files(pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T)
VALORACION_PD70 <- read_csv2(archivos[which.max(file.info(archivos)$mtime)])
archivos <- list.files('/DF_VALORACION_GENERAL',pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T)
archivos
archivos <- list.files('/DF_VALORACION_GENERAL',pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T)
archivos
archivos <- list.files('/DF_VALORACION_GENERAL')
archivos
archivos <- list.files('DF_VALORACION_GENERAL/')
archivos
### DIRECTORIO DE TRABAJO
setwd("C:/Users/ivan.villalba/Documents/R Scripts and projects/VALORACION P70/ARCHIVO PARA VALORACION/")
options(scipen=999,digits = 20)
# CARTERA PROMOCOMERCIO - SUMINISTRADA POR CONTABILIDAD
CARTERA_PD70 <- read_excel('Base creditos PM Octubre_24.xlsx', skip = 3) %>% filter(!is.na(Credito))
archivos <- list.files('DF_VALORACION_GENERAL/',pattern = 'VALORACION_PRUEBA_pd70_total',full.names = T)
VALORACION_PD70 <- read_csv2(archivos[which.max(file.info(archivos)$mtime)])
VALORACION_PD70 %<>%  mutate(Valoracion_pd_mod = case_when(
tasa_recuperacion_anual > 0 & LTV <= 0.8 ~ 1*(1+ tasa_recuperacion_anual)*(1+(1/LTV)*(1/Duracion_p10)),
tasa_recuperacion_anual == 0 & LTV <= 0.6 ~ 1*(1+0.6*(1/LTV)),
TRUE ~ 1*(1+tasa_recuperacion_anual)))
ZZ <- CARTERA_PD70 %>% filter(`Suma de Importe base`>0.0001) %>%
left_join(VALORACION_PD70,
by = c('Credito'='credito')) %>%
filter(!is.na(valor_pago_ttl_canc)) %>%
rename('Saldo Actual'='Suma de Importe base') %>%
mutate(Precio_y_valoracion=`Precio de compra`* Valoracion_pd,
Precio_y_valoracion_mod= `Precio de compra`*Valoracion_pd_mod)
X <- CARTERA_PD70 %>% filter(`Suma de Importe base`>0.0001) %>%
left_join(VALORACION_PD70,
by = c('Credito'='credito')) %>%
filter(is.na(valor_pago_ttl_canc)) %>%
rename('Saldo Actual'='Suma de Importe base') %>%
mutate(Precio_y_valoracion=`Precio de compra`* Valoracion_pd,
Precio_y_valoracion_mod= `Precio de compra`*Valoracion_pd_mod))
X <- CARTERA_PD70 %>% filter(`Suma de Importe base`>0.0001) %>%
left_join(VALORACION_PD70,
by = c('Credito'='credito')) %>%
filter(is.na(valor_pago_ttl_canc)) %>%
rename('Saldo Actual'='Suma de Importe base') %>%
mutate(Precio_y_valoracion=`Precio de compra`* Valoracion_pd,
Precio_y_valoracion_mod= `Precio de compra`*Valoracion_pd_mod)
View(X)
View(ZZ)
DF <- CARTERA_PD70 %>% filter(`Suma de Importe base`>0.0001) %>%
left_join(VALORACION_PD70,
by = c('Credito'='credito')) %>%
rename('Saldo Actual'='Suma de Importe base') %>%
mutate(Precio_y_valoracion=`Precio de compra`* Valoracion_pd,
Precio_y_valoracion_mod= `Precio de compra`*Valoracion_pd_mod)
DF_ZZ <- DF %>% filter(!is.na(valor_pago_ttl_canc))
DF_X <- DF %>%filter(is.na(valor_pago_ttl_canc))
View(DF_X)
View(X)
tabla_valoracion <- DF_ZZ %>% filter(`Saldo Actual`>0.000001) %>% group_by(tipo_producto) %>% summarise(Creditos = n(),
Deuda_total = sum(valor_pago_ttl_canc, na.rm = T),
Saldo_a_capital = sum(`Saldo Actual`,na.rm = T),
Precio_de_compra= sum(`Precio de compra`, na.rm = T),
Valoracion = sum(Precio_y_valoracion,na.rm = T),
Valoracion_mod = sum(Precio_y_valoracion_mod,na.rm = T)) %>%
mutate(p =Valoracion/Precio_de_compra-1,
p_mod = Valoracion_mod/Precio_de_compra-1)
residuo <- DF_X %>% filter(`Saldo Actual`>0.000001) %>%
select(Credito,valor_pago_ttl_canc,`Saldo Actual`,`Precio de compra`,Precio_y_valoracion)
View(tabla_valoracion)
